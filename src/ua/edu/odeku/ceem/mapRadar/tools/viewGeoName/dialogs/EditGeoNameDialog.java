package ua.edu.odeku.ceem.mapRadar.tools.viewGeoName.dialogs;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import org.hibernate.SQLQuery;
import org.hibernate.ScrollMode;
import org.hibernate.ScrollableResults;
import org.hibernate.Session;
import ua.edu.odeku.ceem.mapRadar.db.DB;
import ua.edu.odeku.ceem.mapRadar.db.models.GeoName;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ResourceBundle;

public class EditGeoNameDialog extends JDialog {

    private GeoName geoName;

    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JTextField idTextField;
    private JTextField sourceIdTextField;
    private JTextField nameTextField;
    private JTextField asciiNameTextField;
    private JTextField translateTextField;
    private JTextField alternativeTextField;
    private JTextField countryTextField;
    private JTextField featureClassTextField;
    private JComboBox featureCodeComboBox;

    public EditGeoNameDialog() {
        setContentPane(contentPane);
        setModal(true);
        getRootPane().setDefaultButton(buttonOK);

        buttonOK.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onOK();
            }
        });

        buttonCancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        });

// call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

// call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                onCancel();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
    }

    public EditGeoNameDialog(GeoName geoName) {
        this();

        this.geoName = geoName;
        this.idTextField.setText(String.valueOf(geoName.getId()));
        this.sourceIdTextField.setText(String.valueOf(geoName.getSourceId()));
        this.nameTextField.setText(geoName.getName());
        this.asciiNameTextField.setText(geoName.getAsciiname());
        this.translateTextField.setText(geoName.getTranslateName() != null ? geoName.getTranslateName() : "");
        this.alternativeTextField.setText(geoName.getAlternatenames() != null ? geoName.getAlternatenames() : "");
        this.countryTextField.setText(geoName.getCountryCode());
        this.featureClassTextField.setText(String.valueOf(geoName.getFeatureClass()));
        initFeatureCode(geoName);

        this.pack();
        this.setMinimumSize(new Dimension(this.getWidth(), this.getHeight()));
        this.setMaximumSize(new Dimension(800, this.getHeight()));
    }

    private void initFeatureCode(GeoName geoName) {
        Session session = DB.getSession();

        String sql = "SELECT DISTINCT FEATURE_CODE FROM GEO_NAME WHERE FEATURE_CLASS = :featureClass ;";
        SQLQuery query = session.createSQLQuery(sql);

        query.setParameter("featureClass", geoName.getFeatureClass());
        query.addScalar("FEATURE_CODE", DB.STRING_TYPE);

        ScrollableResults results = query.scroll(ScrollMode.FORWARD_ONLY);
        results.beforeFirst();

        while (results.next()) {
            featureCodeComboBox.addItem(results.getString(0));
        }

        results.close();
        DB.closeSession(session);
    }

    private void onOK() {
// add your code here
        dispose();
    }

    private void onCancel() {
// add your code here if necessary
        dispose();
    }

    public static void main(String[] args) {
        EditGeoNameDialog dialog = new EditGeoNameDialog();
        dialog.pack();
        dialog.setVisible(true);
        System.exit(0);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
        panel1.add(panel2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonOK = new JButton();
        buttonOK.setText("OK");
        panel2.add(buttonOK, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonCancel = new JButton();
        buttonCancel.setText("Cancel");
        panel2.add(buttonCancel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FormLayout("fill:d:grow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        contentPane.add(panel3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow"));
        CellConstraints cc = new CellConstraints();
        panel3.add(panel4, cc.xy(1, 1));
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label1, ResourceBundle.getBundle("strings").getString("label_geoName_id"));
        panel4.add(label1, cc.xy(3, 1));
        idTextField = new JTextField();
        idTextField.setEditable(false);
        idTextField.setEnabled(false);
        panel4.add(idTextField, cc.xy(5, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:noGrow"));
        panel3.add(panel5, cc.xy(1, 3));
        final JLabel label2 = new JLabel();
        label2.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label2, ResourceBundle.getBundle("strings").getString("label_geo_sourse_id"));
        panel5.add(label2, cc.xy(3, 1));
        sourceIdTextField = new JTextField();
        sourceIdTextField.setEditable(false);
        sourceIdTextField.setEnabled(false);
        panel5.add(sourceIdTextField, cc.xy(5, 1, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,center:d:grow"));
        panel3.add(panel6, cc.xy(1, 5));
        final JLabel label3 = new JLabel();
        label3.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label3, ResourceBundle.getBundle("strings").getString("label_geoName_Name"));
        panel6.add(label3, cc.xy(3, 2));
        nameTextField = new JTextField();
        panel6.add(nameTextField, cc.xy(5, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,center:d:noGrow"));
        panel3.add(panel7, cc.xy(1, 7));
        final JLabel label4 = new JLabel();
        label4.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label4, ResourceBundle.getBundle("strings").getString("label_geoName"));
        panel7.add(label4, cc.xy(3, 2));
        asciiNameTextField = new JTextField();
        panel7.add(asciiNameTextField, cc.xy(5, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panel3.add(panel8, cc.xy(1, 9));
        final JLabel label5 = new JLabel();
        label5.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label5, ResourceBundle.getBundle("strings").getString("label_translate"));
        panel8.add(label5, cc.xy(3, 3));
        translateTextField = new JTextField();
        panel8.add(translateTextField, cc.xy(5, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel9 = new JPanel();
        panel9.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,center:max(d;4px):noGrow"));
        panel3.add(panel9, cc.xy(1, 11));
        final JLabel label6 = new JLabel();
        label6.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label6, ResourceBundle.getBundle("strings").getString("label_geoName_altName"));
        panel9.add(label6, cc.xy(3, 2));
        alternativeTextField = new JTextField();
        panel9.add(alternativeTextField, cc.xy(5, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel10 = new JPanel();
        panel10.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,center:max(d;4px):noGrow"));
        panel3.add(panel10, cc.xy(1, 13));
        final JLabel label7 = new JLabel();
        label7.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label7, ResourceBundle.getBundle("strings").getString("label_country:"));
        panel10.add(label7, cc.xy(3, 2));
        countryTextField = new JTextField();
        countryTextField.setEditable(false);
        countryTextField.setEnabled(false);
        panel10.add(countryTextField, cc.xy(5, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel11 = new JPanel();
        panel11.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,center:max(d;4px):noGrow"));
        panel3.add(panel11, cc.xy(1, 15));
        final JLabel label8 = new JLabel();
        label8.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label8, ResourceBundle.getBundle("strings").getString("label_geoName_featureClass"));
        panel11.add(label8, cc.xy(3, 2));
        featureClassTextField = new JTextField();
        featureClassTextField.setEditable(false);
        featureClassTextField.setEnabled(false);
        panel11.add(featureClassTextField, cc.xy(5, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final JPanel panel12 = new JPanel();
        panel12.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:100px:grow(0.05),left:4dlu:noGrow,fill:max(d;4px):grow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        panel3.add(panel12, cc.xy(1, 17));
        final JLabel label9 = new JLabel();
        label9.setHorizontalAlignment(4);
        this.$$$loadLabelText$$$(label9, ResourceBundle.getBundle("strings").getString("label_geoName_featureCode"));
        panel12.add(label9, cc.xy(3, 3));
        featureCodeComboBox = new JComboBox();
        panel12.add(featureCodeComboBox, cc.xy(5, 3));
    }

    /**
     * @noinspection ALL
     */
    private void $$$loadLabelText$$$(JLabel component, String text) {
        StringBuffer result = new StringBuffer();
        boolean haveMnemonic = false;
        char mnemonic = '\0';
        int mnemonicIndex = -1;
        for (int i = 0; i < text.length(); i++) {
            if (text.charAt(i) == '&') {
                i++;
                if (i == text.length()) break;
                if (!haveMnemonic && text.charAt(i) != '&') {
                    haveMnemonic = true;
                    mnemonic = text.charAt(i);
                    mnemonicIndex = result.length();
                }
            }
            result.append(text.charAt(i));
        }
        component.setText(result.toString());
        if (haveMnemonic) {
            component.setDisplayedMnemonic(mnemonic);
            component.setDisplayedMnemonicIndex(mnemonicIndex);
        }
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
